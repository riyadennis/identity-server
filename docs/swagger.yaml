definitions:
  foundation.Response:
    properties:
      error-code:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  store.Token:
    properties:
      access_token:
        type: string
      expiry:
        type: string
      last_refresh:
        type: string
      status:
        type: integer
      token_ttl:
        type: string
      token_type:
        type: string
    type: object
  store.User:
    properties:
      company:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
      post_code:
        type: string
      terms:
        type: boolean
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /admin/delete/{userID}:
    delete:
      description: Permanently remove a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/foundation.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/foundation.Response'
      security:
      - ApiKeyAuth: []
      tags:
      - User
  /liveness:
    get:
      description: Returns liveness and k8s deployment info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Liveness probe
      tags:
      - Health
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: Basic base64(email:password)
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/foundation.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/foundation.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/foundation.Response'
      tags:
      - Auth
  /readiness:
    get:
      description: Checks if API is ready for traffic (DB available)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/foundation.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/foundation.Response'
      summary: Readiness probe
      tags:
      - Health
  /register:
    post:
      consumes:
      - application/json
      description: Create a user with email and password
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/store.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/store.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/foundation.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/foundation.Response'
      tags:
      - Auth
  /user/home:
    get:
      description: Returns dashboard info for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/foundation.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/foundation.Response'
      security:
      - ApiKeyAuth: []
      tags:
      - User
swagger: "2.0"
