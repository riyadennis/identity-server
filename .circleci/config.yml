version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.13 # The primary container where steps are run
      - image: circleci/mysql:5.7.18
        security_opt:
          - seccomp:unconfined
        environment:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: identity_db
          MYSQL_USER: identity_user
          MYSQL_PASSWORD: root

    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Install MySQL CLI; Import dummy data; run an example query
          command: |
            sudo apt-get install default-mysql-client
#            mysql -h 127.0.0.1 -u root -proot identity_db < sql-data/dummy.sql
#            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="SELECT * FROM test_db.Persons"
      - run: go get -v -t -d ./...
      - run: go test -v ./...
      - run:
          name: Running web server
            background: true
            command: |
              printenv | grep MYSQL > .env
              go run main.go
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
